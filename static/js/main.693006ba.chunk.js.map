{"version":3,"sources":["images/House.png","images/Grass.png","components/ResourcesPanel.js","components/Building.js","components/BuildingsListPanel.js","components/BuildArea.js","components/Board.js","components/MainPanel.js","components/Alerts.js","App.js","serviceWorker.js","index.js","images/Wood.png","images/Farm.png"],"names":["module","exports","__webpack_require__","p","ResourcesPanel","props","react_default","a","createElement","className","style","backgroundImage","concat","wood","date","id","onClick","finishDay","food","population","money","buildingImages","farm","house","panelOn","Building","deletePanel","panel","remove","document","setAttribute","name","classList","add","createPanel","append","buttonYes","innerHTML","onclick","handleAdding","image","price","createYesButton","buttonNo","createNoButton","getElementById","appendChild","unselectable","src","alt","draggable","BuildingsListPanel","components_Building","handleAddingFarm","handleAddingHouse","BuildArea","buildings","building","push","key","Board","grass","components_BuildArea","MainPanel","components_BuildingsListPanel","components_Board","Alerts","dayjs","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newBuildings","toConsumableArray","buildingId","setState","foodPerDay","showNoResources","calculateResources","format","buildingName","display","innerText","setTimeout","hideNoResources","hideSummary","backgroundColor","removeAttribute","showSummary","summaryText","_this2","react_router_dom","react_router","path","exact","render","title","components_Alerts","components_ResourcesPanel","components_MainPanel","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","src_App","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.693006ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/House.76de33d5.png\";","module.exports = __webpack_public_path__ + \"static/media/Grass.8e48751d.png\";","import React from \"react\";\r\nimport wood from \"../images/Wood.png\";\r\nconst ResourcesPanel=(props)=>{\r\n    return (\r\n        <div className=\"resources\" style={{backgroundImage: `url(${wood})`}}>\r\n            <div className=\"resources__resource resources__date\">\r\n                <div className=\"resources__date--value\">{props.date}</div>\r\n                <button id=\"finish\" onClick={()=>{props.finishDay()}} className=\"resources__date--button\">Zakończ dzień</button>\r\n            </div>\r\n            <div className=\"resources__resource resources__food\">Żywność: {props.food}</div>\r\n            <div className=\"resources__resource resources__population\">Populacja: {props.population}</div>\r\n            <div className=\"resources__resource resources__money\">Pieniądze: {props.money}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResourcesPanel;","import React from \"react\";\r\nimport farm from \"../images/Farm.png\";\r\nimport house from \"../images/House.png\";\r\n\r\nconst buildingImages = {\"farm\": farm, \"house\": house};\r\nlet panelOn=false;\r\nconst Building = (props) => {\r\n\r\n    function createPanel(){\r\n        let panel = document.createElement(\"div\");\r\n        panel.setAttribute(\"id\", \"panel\"+props.name);\r\n        panel.classList.add(\"building__panel\");\r\n        panelOn=true;\r\n        return(panel)\r\n    }\r\n\r\n    function createYesButton(panel) {\r\n        let buttonYes = document.createElement('BUTTON');\r\n        buttonYes.classList.add(\"building__button--yes\");\r\n        buttonYes.innerHTML = \"✓\";\r\n        buttonYes.onclick = () => {\r\n            props.handleAdding({name: props.name, image: props.image, price: props.price}, deletePanel(panel))\r\n        };\r\n        return buttonYes\r\n    }\r\n\r\n    function createNoButton(panel) {\r\n        let buttonNo = document.createElement('BUTTON');\r\n        buttonNo.innerHTML = \"✖\";\r\n        buttonNo.onclick = () => {\r\n            deletePanel(panel)\r\n        };\r\n        buttonNo.classList.add(\"building__button--no\");\r\n        return buttonNo\r\n    }\r\n\r\n    function deletePanel(panel) {\r\n        panel.remove();\r\n        panelOn=false;\r\n    };\r\n\r\n    function showSidePanel() {\r\n        if(!panelOn) {\r\n            let panel = createPanel();\r\n            panel.append(createYesButton(panel));\r\n            panel.append(createNoButton(panel));\r\n            let building = document.getElementById(props.name);\r\n            building.appendChild(panel);\r\n            panelOn=true;\r\n        }\r\n    }\r\n\r\n    return (<div onClick={showSidePanel} id={props.name} className=\"building\" unselectable=\"on\">\r\n        <img className=\"building__image\"\r\n             src={buildingImages[props.image]} alt={props.image} draggable={\"false\"} unselectable={\"on\"}/>\r\n        <div className=\"building__name\">{props.name}</div>\r\n    </div>)\r\n};\r\nexport default Building","import React from \"react\";\r\nimport Building from \"./Building\";\r\nimport wood from \"../images/Wood.png\";\r\n\r\nconst BuildingsListPanel = (props) => {\r\n    return (<div className=\"buildingsList\" style={{backgroundImage: `url(${wood})`}}>\r\n        <Building\r\n            name=\"Farma\"\r\n            image=\"farm\"\r\n            price={50}\r\n            handleAdding={props.handleAddingFarm}\r\n        />\r\n        <Building\r\n            name=\"Dom\"\r\n            image=\"house\"\r\n            price={100}\r\n            handleAdding={props.handleAddingHouse}\r\n        />\r\n    </div>)\r\n};\r\nexport default BuildingsListPanel","import React from \"react\";\r\nimport farm from \"../images/Farm.png\";\r\nimport house from \"../images/House.png\";\r\n\r\nconst buildingImages = {\"farm\": farm, \"house\": house};\r\nconst BuildArea = (props) => {\r\n    let buildings = [];\r\n    for (const building in props.buildings) {\r\n        buildings.push(<img unselectable={\"on\"} draggable={\"false\"} key={building} className=\"buildArea__image\" src={buildingImages[props.buildings[building].image]}\r\n                            alt={props.buildings[building].image}/>)\r\n    }\r\n    return (<div className=\"buildArea\" draggable={\"false\"} unselectable={\"on\"}>\r\n        {buildings}\r\n    </div>)\r\n};\r\nexport default BuildArea","import React from \"react\";\r\nimport grass from \"../images/Grass.png\"\r\nimport BuildArea from \"./BuildArea\";\r\n\r\nconst Board = (props) => {\r\n    return (<div style={{backgroundImage: `url(${grass})`}} className=\"board\">\r\n        <BuildArea\r\n            buildings={props.buildings}\r\n        />\r\n    </div>)\r\n};\r\nexport default Board;","import React from \"react\";\r\nimport BuildingsListPanel from \"./BuildingsListPanel\";\r\nimport Board from \"./Board\";\r\n\r\nconst MainPanel = (props) => {\r\n    return (<div className=\"main\">\r\n        <BuildingsListPanel\r\n            handleAddingHouse={props.handleAddingHouse}\r\n            handleAddingFarm={props.handleAddingFarm}\r\n        />\r\n        <Board\r\n        buildings={props.buildings}\r\n        />\r\n    </div>)\r\n};\r\nexport default MainPanel;","import React from \"react\";\r\n\r\nconst Alerts = () => {\r\n    return (\r\n        <div>\r\n            <div id=\"summary\" className=\"daySummary\">\r\n                Zakończono dzień\r\n            </div>\r\n            <div id=\"resources\" className=\"noResources\">\r\n                Brak środków na wybudowanie:\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Alerts;","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/Main.css';\nimport {\n    BrowserRouter as Router,\n    Route\n} from 'react-router-dom';\nimport dayjs from \"dayjs\";\nimport ResourcesPanel from \"./components/ResourcesPanel\";\nimport MainPanel from \"./components/MainPanel\";\nimport Alerts from \"./components/Alerts\";\n\nlet date = dayjs();\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            food: 0,\n            population: 0,\n            money: 1000,\n            foodPerDay: 0,\n            date: date.format('DD/MM/YYYY'),\n            buildings: [],\n            buildingId: 0\n        };\n    }\n\n    handleAddingFarm = (building) => {\n        if (this.state.money - building.price >= 0) {\n            let newBuildings = [...this.state.buildings];\n            building['id'] = this.state.buildingId;\n            newBuildings.push(building);\n            this.setState({\n                buildingId: this.state.buildingId + 1,\n                buildings: newBuildings,\n                money: this.state.money - building.price,\n                foodPerDay: this.state.foodPerDay + 10\n            })\n        } else {\n            this.showNoResources(building.name)\n        }\n    };\n    handleAddingHouse = (building) => {\n        if (this.state.money - building.price >= 0) {\n            let newBuildings = [...this.state.buildings];\n            building['id'] = this.state.buildingId;\n            newBuildings.push(building);\n            this.setState({\n                buildingId: this.state.buildingId + 1,\n                buildings: newBuildings,\n                money: this.state.money - building.price,\n                population: this.state.population + 20,\n                foodPerDay: this.state.foodPerDay - 3\n            })\n        } else {\n            this.showNoResources(building.name);\n        }\n    };\n\n    calculateResources = () => {\n        date = date.add(1, 'day');\n        let food = this.state.food + this.state.foodPerDay;\n        if (food >= 0) {\n            this.setState({date: date.format('DD/MM/YYYY'), food: this.state.food + this.state.foodPerDay});\n        } else {\n            this.setState({date: date.format('DD/MM/YYYY'), food: 0});\n        }\n    };\n    showNoResources=(buildingName)=>{\n        document.getElementById(\"resources\").style.display = \"block\";\n        document.getElementById(\"resources\").innerText=\"Brak środków na wybudowanie:\\n\"+ buildingName;\n        setTimeout(this.hideNoResources, 3000)\n    };\n    hideNoResources=()=>{\n        document.getElementById(\"resources\").style.display = \"none\";\n    };\n\n\n    hideSummary = () => {\n        document.getElementById(\"summary\").style.display = \"none\";\n        document.getElementById(\"finish\").style.backgroundColor = \"#4f271b\"\n        document.getElementById(\"finish\").removeAttribute(\"disabled\")\n    };\n\n    showSummary = () => {\n        document.getElementById(\"summary\").style.display = \"block\";\n        let summaryText=\"Zakończono dzień!\\nTempo przyrostu żywności: \"+this.state.foodPerDay;\n        let starving=this.state.food+this.state.foodPerDay;\n        if(starving<0){\n            summaryText+=\"\\nBrakuje żywności.\"\n        }\n        document.getElementById(\"summary\").innerText=summaryText\n        document.getElementById(\"finish\").style.backgroundColor = \"grey\";\n        document.getElementById(\"finish\").setAttribute(\"disabled\", \"true\")\n        setTimeout(this.hideSummary, 3000)\n    };\n\n    finishDay = () => {\n        this.calculateResources();\n        this.showSummary();\n    };\n\n    render() {\n\n        return (\n            <Router>\n                <Route path=\"/Turn-based-strategy\" exact render={\n                    () => {\n                        document.title = \"Gra strategiczna\";\n                        return (<div>\n                            <Alerts/>\n                            <ResourcesPanel\n                                date={this.state.date}\n                                food={this.state.food}\n                                population={this.state.population}\n                                money={this.state.money}\n                                finishDay={this.finishDay}\n                            />\n                            <MainPanel\n                                buildings={this.state.buildings}\n                                handleAddingHouse={this.handleAddingHouse}\n                                handleAddingFarm={this.handleAddingFarm}\n                            />\n                        </div>)\n                    }\n                }/>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Wood.a23ce481.png\";","module.exports = __webpack_public_path__ + \"static/media/Farm.8f5df3d3.png\";"],"sourceRoot":""}